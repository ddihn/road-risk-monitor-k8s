
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-api
  template:
    metadata:
      labels:
        app: springboot-api
    spec:
      containers:
        - name: springboot-api
          image: yooncount/road-risk-monitor-spring-boot-api:latest
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-api
spec:
  selector:
    app: springboot-api
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-frontend
  template:
    metadata:
      labels:
        app: react-frontend
    spec:
      containers:
        - name: react-frontend
          image: yooncount/road-risk-monitor-frontend:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: react-frontend
spec:
  selector:
    app: react-frontend
  ports:
    - port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: python-collector
  template:
    metadata:
      labels:
        app: python-collector
    spec:
      containers:
        - name: python-collector
          image: yooncount/road-risk-monitor-python-collector:latest
          # 필요하면 포트 열기
          # ports:
          #   - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: python-collector
spec:
  selector:
    app: python-collector
  ports:
    - port: 8081
      targetPort: 8081
  type: ClusterIP

